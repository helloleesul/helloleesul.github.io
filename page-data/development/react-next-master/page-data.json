{"componentChunkName":"component---src-templates-post-template-tsx","path":"/development/react-next-master/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"tableOfContents":"<ul>\n<li><a href=\"#nodejs-%EB%AA%A8%EB%93%88%EC%8B%9C%EC%8A%A4%ED%85%9C\">Node.js 모듈시스템</a></li>\n<li><a href=\"#%EB%A6%AC%EB%A0%8C%EB%8D%94%EB%A7%81%EA%B3%BC-state\">리렌더링과 state</a></li>\n<li><a href=\"#%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4useeffect\">라이프사이클(useEffect)</a></li>\n<li><a href=\"#usereducer%EB%A1%9C-%EC%83%81%ED%83%9C%EA%B4%80%EB%A6%AC-%EB%A1%9C%EC%A7%81-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\">useReducer로 상태관리 로직 분리하기</a></li>\n<li><a href=\"#%EB%A6%AC%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%B5%9C%EC%A0%81%ED%99%94-%ED%95%98%EA%B8%B0\">리렌더링 최적화 하기</a></li>\n<li><a href=\"#usememo%EC%99%80-useeffect-%EC%B0%A8%EC%9D%B4\">useMemo와 useEffect 차이</a></li>\n<li><a href=\"#reactmemo\">React.memo</a></li>\n<li><a href=\"#reactjs%EC%9D%98-csr-nextjs%EC%9D%98-ssr\">React.js의 CSR, Next.js의 SSR</a></li>\n<li><a href=\"#nextjs-%EB%A0%8C%EB%8D%94%EB%A7%81---ssr\">Next.js 렌더링 - SSR</a></li>\n<li><a href=\"#nextjs-%EB%A0%8C%EB%8D%94%EB%A7%81---ssg\">Next.js 렌더링 - SSG</a></li>\n<li><a href=\"#nextjs-%EB%A0%8C%EB%8D%94%EB%A7%81---isr\">Next.js 렌더링 - ISR</a></li>\n<li><a href=\"#nextjs-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B5%9C%EC%A0%81%ED%99%94\">Next.js 이미지 최적화</a></li>\n<li><a href=\"#nextjs-seo\">Next.js SEO</a></li>\n<li><a href=\"#vercel-%EB%B0%B0%ED%8F%AC\">vercel 배포</a></li>\n</ul>","fields":{"readingTime":{"text":"12 min read"}},"html":"<blockquote>\n<p><a href=\"https://www.udemy.com/course/react-next-master/\" target=\"_blank\" rel=\"nofollow\">프로젝트로 배우는 React.js &#x26; Next.js 마스터리 클래스</a> 강의를 들으며 기록한 내용입니다.</p>\n</blockquote>\n<hr>\n<h3 id=\"nodejs-모듈시스템\" style=\"position:relative;\">Node.js 모듈시스템<a href=\"#nodejs-%EB%AA%A8%EB%93%88%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"nodejs 모듈시스템 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li><strong>CJS(common js) module</strong>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 내보내기</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> 함수명<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 함수명<span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 불러오기</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> 함수명<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 함수명<span class=\"token number\">2</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./경로파일'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li><strong>ES module</strong>\n<ul>\n<li>설정: package.json에 <code class=\"language-text\">\"type\":\"module\"</code> 추가</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 내보내기</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>함수명<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 함수명<span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> 또는 <span class=\"token keyword\">export</span> <span class=\"token function\">함수명1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">export</span> <span class=\"token function\">함수명2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 기본값 내보내기 (하나만 가능)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">함수명3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>`\n<span class=\"token comment\">// 불러오기 (반드시 확장자까지 표기해야 함)</span>\n<span class=\"token keyword\">import</span> 함수명<span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>함수명<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 함수명<span class=\"token number\">2</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./경로파일.js\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<hr>\n<h3 id=\"리렌더링과-state\" style=\"position:relative;\">리렌더링과 state<a href=\"#%EB%A6%AC%EB%A0%8C%EB%8D%94%EB%A7%81%EA%B3%BC-state\" aria-label=\"리렌더링과 state permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>부모 컴포넌트가 리렌더링 되면 (state값이 업데이트되면) 자식 컴포넌트들도 리렌더링 된다.</li>\n<li>state를 계층구조상에서 여러 컴포넌트들이 공유할 수있도록 위로 끌어올려서 아래 컴포넌트들이 공유하게 하는 것이 <strong>State Lifting</strong>이라고 한다.</li>\n<li>state를 공유하는 컴포넌트들의 공통되는 부모컴포넌트에서 만들어져야한다.</li>\n</ul>\n<hr>\n<h3 id=\"라이프사이클useeffect\" style=\"position:relative;\">라이프사이클(useEffect)<a href=\"#%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4useeffect\" aria-label=\"라이프사이클useeffect permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> isMountRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 종속배열이 없다면 업데이트될 때마다 실행</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 마운트를 제외한 업데이트 시 실행되게 제어</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isMountRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    isMountRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App 업데이트'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 종속배열이 빈 배열이라면 첫 마운트되었을 때에만 실행</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App 마운트'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 언마운트</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Even 마운트'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Even 언마운트'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h3 id=\"usereducer로-상태관리-로직-분리하기\" style=\"position:relative;\">useReducer로 상태관리 로직 분리하기<a href=\"#usereducer%EB%A1%9C-%EC%83%81%ED%83%9C%EA%B4%80%EB%A6%AC-%EB%A1%9C%EC%A7%81-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"usereducer로 상태관리 로직 분리하기 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>useReducer는 useState와 같이 새로운 State를 생성하고 업데이트를 시키는 함수를 제공하지만, 컴포넌트 외부에 State관리 로직을 분리할 수 있다는 차이점이 존재한다.</li>\n</ul>\n<hr>\n<h3 id=\"리렌더링-최적화-하기\" style=\"position:relative;\">리렌더링 최적화 하기<a href=\"#%EB%A6%AC%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%B5%9C%EC%A0%81%ED%99%94-%ED%95%98%EA%B8%B0\" aria-label=\"리렌더링 최적화 하기 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getAnalyzedTodoData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'TODO 분석 함수 호출'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> totalCount <span class=\"token operator\">=</span> todos<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> doneCount <span class=\"token operator\">=</span> todos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span> <span class=\"token operator\">=></span> todo<span class=\"token punctuation\">.</span>isDone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> notDoneCount <span class=\"token operator\">=</span> totalCount <span class=\"token operator\">-</span> doneCount<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> totalCount<span class=\"token punctuation\">,</span> doneCount<span class=\"token punctuation\">,</span> notDoneCount <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> totalCount<span class=\"token punctuation\">,</span> doneCount<span class=\"token punctuation\">,</span> notDoneCount <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span>getAnalyzedTodoData<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n  todos<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><strong>useMemo: 특정 조건을 만족하지 않으면 다시 실행하지 않도록 도와주는 훅, 재 연산 방지</strong><br>\n불필요한 연산을 줄여보자.</li>\n<li>getAnalyzedTodoData 함수에서 todos의 배열 길이가 길어질수록 더 많은 연산을 하게 된다. 함수 내부의 filter메서드는 모든 요소를 순회하기 때문이다.</li>\n<li><strong>todos 데이터가 변경되지않는다면 다시 호출할 필요가 없다.</strong></li>\n</ul>\n<hr>\n<h3 id=\"usememo와-useeffect-차이\" style=\"position:relative;\">useMemo와 useEffect 차이<a href=\"#usememo%EC%99%80-useeffect-%EC%B0%A8%EC%9D%B4\" aria-label=\"usememo와 useeffect 차이 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ol>\n<li>\n<p><strong>useMemo:</strong></p>\n<ul>\n<li><code class=\"language-text\">useMemo</code>는 성능 최적화를 위해 사용된다.</li>\n<li>이 훅은 계산 비용이 많이 드는 연산의 결과를 캐시하고, 의존성 배열이 변경되지 않는 한 같은 결과를 재사용한다.</li>\n<li>주로 계산 비용이 높은 함수나 연산 결과를 캐시하여 렌더링 성능을 향상시킬 때 사용된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> memoizedValue <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">computeExpensiveValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>useEffect:</strong></p>\n<ul>\n<li><code class=\"language-text\">useEffect</code>는 부수 효과(side effects)를 처리하기 위해 사용된다.</li>\n<li>주로 데이터 가져오기, 구독 설정, 타이머 설정 등과 같은 비동기 작업이나 렌더링과는 직접적으로 관련이 없는 작업을 수행할 때 사용된다.</li>\n<li><code class=\"language-text\">useEffect</code>의 콜백 함수는 렌더링 이후에 실행되며, 렌더링 이전 또는 렌더링 도중에 특정 동작을 수행하도록 설정할 수 있다.\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 부수 효과 작업 수행</span>\n  <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>dependency<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ol>\n<p>간단히 말해, <code class=\"language-text\">useMemo</code>는 값을 메모이제이션하여 성능을 최적화하고, <code class=\"language-text\">useEffect</code>는 부수 효과를 처리하기 위해 사용된다.</p>\n<hr>\n<h3 id=\"reactmemo\" style=\"position:relative;\">React.memo<a href=\"#reactmemo\" aria-label=\"reactmemo permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>불필요하게 리렌더되는 컴포넌트 최적화하기</p>\n<ul>\n<li>부모컴포넌트가 리렌더되면 자식컴포넌트도 리렌더된다.</li>\n<li>상태가 변경됨에 따라 컴포넌트가 리렌더링된다.</li>\n</ul>\n<p>따라서 상태 변화에 영향이 없는 컴포넌트를 memo라는 메서드에 인수로 넣어준다.<br>\n👉 최적화된 컴포넌트로 반환됨</p>\n<hr>\n<h3 id=\"reactjs의-csr-nextjs의-ssr\" style=\"position:relative;\">React.js의 CSR, Next.js의 SSR<a href=\"#reactjs%EC%9D%98-csr-nextjs%EC%9D%98-ssr\" aria-label=\"reactjs의 csr nextjs의 ssr permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>\n<p><strong>CSR</strong></p>\n<ol>\n<li>빈 HTML 파일 (리액트 서버 → 브라우저)</li>\n<li>텅 빈 화면 렌더링 (브라우저 → 화면)</li>\n<li>번들링된 JS파일 (리액트 서버 → 브라우저)</li>\n<li>컨텐츠 렌더링 (브라우저 → 화면)</li>\n</ol>\n<ul>\n<li>장점: 페이지간의 이동이 매우 빠름</li>\n<li>단점: 초기 페이지 로딩이 느림</li>\n</ul>\n</li>\n<li>\n<p><strong>CSR + SSR</strong></p>\n<ol>\n<li>완성된 HTML 파일 (넥스트 서버 → 브라우저)</li>\n<li>완성된 화면 렌더링 (브라우저 → 화면)</li>\n<li>번들링된 JS파일 (넥스트 서버 → 브라우저)</li>\n<li>인터렉션, 페이지 이동 등 (브라우저 → 화면)</li>\n</ol>\n<ul>\n<li>초기 페이지 접속: SSR방식으로 빠른 렌더링</li>\n<li>페이지 이동: CSR방식으로 빠른 이동</li>\n</ul>\n</li>\n</ul>\n<p>CSR은 검색엔진최적화(SEO)는 불리하다.</p>\n<ul>\n<li>다양한 페이지들의 정보를 수집 👉 수집된 정보를 보관(DB) 👉 연관된 정보를 결과로 노출</li>\n<li>단순히 빈 HTML파일만 수집하기 때문에 제대로 정보를 수집할 수 없게된다.</li>\n</ul>\n<hr>\n<h3 id=\"nextjs-렌더링---ssr\" style=\"position:relative;\">Next.js 렌더링 - SSR<a href=\"#nextjs-%EB%A0%8C%EB%8D%94%EB%A7%81---ssr\" aria-label=\"nextjs 렌더링   ssr permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li><strong>페이지 이동 Link, useRouter</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"/search\"</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">search page</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span>\n    <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">pathname</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/country/[code]\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">query</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> code <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    country code page\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n    <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/search\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li><strong>getServerSideProps</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getServerSideProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// SSR을 위해 서버측에서 페이지 컴포넌트에게 전달할 데이터를 설정하는 함수</span>\n  <span class=\"token keyword\">const</span> countries <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchCountries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> countries <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h3 id=\"nextjs-렌더링---ssg\" style=\"position:relative;\">Next.js 렌더링 - SSG<a href=\"#nextjs-%EB%A0%8C%EB%8D%94%EB%A7%81---ssg\" aria-label=\"nextjs 렌더링   ssg permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li><strong>getStaticPaths와 getStaticProps</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getStaticPaths</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">paths</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'KOR'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'ABW'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fallback</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 존재하지 않는 경로에 대해서 404페이지로 보여주는 것 (false)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getStaticProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">context</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> code <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> country <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchCountry</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> country <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><strong>fallback : 존재하지 않는 경로 처리</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token literal-property property\">fallback</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 404페이지로 보여주는 것 (false)</span>\n<span class=\"token literal-property property\">fallback</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 실시간으로 생성한 후 반환해주는 것 (SSR처럼 생성 후 -> SSG로 보여줌)</span>\n<span class=\"token literal-property property\">fallback</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 실시간으로 props가 없는 파일을 생성한 후 반환해주고</span>\n<span class=\"token comment\">// 이후에 props를 받아와서 반환해주는 것 (일단 빠르게 먼저 보여줌)</span></code></pre></div>\n<hr>\n<h3 id=\"nextjs-렌더링---isr\" style=\"position:relative;\">Next.js 렌더링 - ISR<a href=\"#nextjs-%EB%A0%8C%EB%8D%94%EB%A7%81---isr\" aria-label=\"nextjs 렌더링   isr permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><strong>ISR</strong> (증분 정적 재생성): 일정 시간을 주기로 정적페이지를 다시 생성하는 기술</p>\n<ul>\n<li>이미 만들어져 있는 페이지를 반환 → 매우 빠른 속도로 렌더링 (SSG의 장점)</li>\n<li>주기적으로 업데이트 됨 → 최신 데이터를 반영함 (SSR의 장점)</li>\n</ul>\n<hr>\n<h3 id=\"nextjs-이미지-최적화\" style=\"position:relative;\">Next.js 이미지 최적화<a href=\"#nextjs-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"nextjs 이미지 최적화 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>웹 페이지에서 가장 많은 용량을 차지하는 요소는 <strong>이미지</strong></p>\n<ul>\n<li>디바이스의 크기에 맞게 이미지 사이즈 조절 (모바일에서는 모바일용 해상도)</li>\n<li>이미지 캐싱을 통한 로딩 속도 증진\nNext.js에서는 이 모든 기능을 next/image 컴포넌트로 자동 제공한다.</li>\n</ul>\n<p>Next.js에서는 Image 컴포넌트의 src의 값을 외부 이미지 서버 주소를 넣지 못하게 자체적으로 방지한다.<br>\n이미지 주소로 인한 보안 취약점을 막기위함이다.<br>\npublic 폴더에 있는 이미지만 사용할 수 있도록 설정되어있다.\n이를 수정하기 위해서는 next.config.js파일에서 특정 도메인에서 불러오는 이미지는 허용하겠다는 설정을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/** @type {import('next').NextConfig} */</span>\n<span class=\"token keyword\">const</span> nextConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">reactStrictMode</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">images</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">domains</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'flagcdn.com'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> nextConfig<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Image 컴포넌트는 width, height가 필수 속성이며, fill을 설정할 경우 width, height는 생략 가능하다.\n대신 가장 가까운 부모의 position과 width, height를 기준으로 꽉 채워지므로 직속 부모의 position을 설정해줘야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>style<span class=\"token punctuation\">.</span>flagImg<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  // position: relative;\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Image</span></span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>flagImg<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>commonName<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">fill</span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<hr>\n<h3 id=\"nextjs-seo\" style=\"position:relative;\">Next.js SEO<a href=\"#nextjs-seo\" aria-label=\"nextjs seo permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li><strong>메타태그</strong><br>\n각 컴포넌트마다 SEO를 설정하려면 Next.js의 Head를 next/head로 부터 불러온다.<br>\n모든 페이지에 적용하는 Head는 next/document에서 불러온다.</li>\n</ul>\n<hr>\n<h3 id=\"vercel-배포\" style=\"position:relative;\">vercel 배포<a href=\"#vercel-%EB%B0%B0%ED%8F%AC\" aria-label=\"vercel 배포 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">vercel deploy\nVercel <span class=\"token constant\">CLI</span> <span class=\"token number\">33.2</span><span class=\"token number\">.0</span>\n\n<span class=\"token operator\">?</span> Set up and deploy “<span class=\"token operator\">~</span><span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>GitHub<span class=\"token operator\">/</span>react<span class=\"token operator\">-</span>next<span class=\"token operator\">-</span>master<span class=\"token operator\">/</span>section12”<span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">Y</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">]</span> y\n<span class=\"token comment\">// 해당 폴더를 배포하는 게 맞는지</span>\n\n<span class=\"token operator\">?</span> Which scope <span class=\"token keyword\">do</span> you want to deploy to<span class=\"token operator\">?</span> helloleesul\n<span class=\"token comment\">// 배포할 계정</span>\n\n<span class=\"token operator\">?</span> Link to existing project<span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>y<span class=\"token operator\">/</span><span class=\"token constant\">N</span><span class=\"token punctuation\">]</span> n\n<span class=\"token comment\">// 기존의 프로젝트로 배포할건지</span>\n\n<span class=\"token operator\">?</span> What’s your project’s name<span class=\"token operator\">?</span> naras<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>next\n<span class=\"token comment\">// 프로젝트 이름 설정</span>\n\n<span class=\"token operator\">?</span> In which directory is your code located<span class=\"token operator\">?</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>\n<span class=\"token comment\">// 코드 경로 설정</span>\n\nLocal settings detected <span class=\"token keyword\">in</span> vercel<span class=\"token punctuation\">.</span>json<span class=\"token operator\">:</span>\nAuto<span class=\"token operator\">-</span>detected Project <span class=\"token function\">Settings</span> <span class=\"token punctuation\">(</span>Next<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token operator\">-</span> Build Command<span class=\"token operator\">:</span> next build\n<span class=\"token operator\">-</span> Development Command<span class=\"token operator\">:</span> next dev <span class=\"token operator\">--</span>port $<span class=\"token constant\">PORT</span>\n<span class=\"token operator\">-</span> Install Command<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">yarn install</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">pnpm install</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">npm install</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> or <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">bun install</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token operator\">-</span> Output Directory<span class=\"token operator\">:</span> Next<span class=\"token punctuation\">.</span>js <span class=\"token keyword\">default</span>\n<span class=\"token operator\">?</span> Want to modify these settings<span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>y<span class=\"token operator\">/</span><span class=\"token constant\">N</span><span class=\"token punctuation\">]</span> n\n<span class=\"token comment\">// 빌드 셋팅을 변경할건지?</span></code></pre></div>","frontmatter":{"title":"React.js & Next.js 강의 기록","summary":"[프로젝트로 배우는 React.js & Next.js 마스터리 클래스] 강의를 들으며 기록한 내용입니다.","date":"2024-02-03","categories":["개발"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/dafec47441568170b5d0cbb5cf341f7f/9ce37/react-next-master.png","srcSet":"/static/dafec47441568170b5d0cbb5cf341f7f/e1116/react-next-master.png 384w,\n/static/dafec47441568170b5d0cbb5cf341f7f/9b7d7/react-next-master.png 768w,\n/static/dafec47441568170b5d0cbb5cf341f7f/9ce37/react-next-master.png 1536w","sizes":"(min-width: 1536px) 1536px, 100vw"},"sources":[{"srcSet":"/static/dafec47441568170b5d0cbb5cf341f7f/5358b/react-next-master.webp 384w,\n/static/dafec47441568170b5d0cbb5cf341f7f/81e8e/react-next-master.webp 768w,\n/static/dafec47441568170b5d0cbb5cf341f7f/fe26e/react-next-master.webp 1536w","type":"image/webp","sizes":"(min-width: 1536px) 1536px, 100vw"}]},"width":1536,"height":804}},"publicURL":"/static/dafec47441568170b5d0cbb5cf341f7f/react-next-master.png"}}}}]},"file":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png","srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/6ecb6/profile-image.png 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/43a9d/profile-image.png 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/f5f72/profile-image.png 240w","sizes":"(min-width: 120px) 120px, 100vw"},"sources":[{"srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/2b147/profile-image.webp 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/caa3b/profile-image.webp 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b15f9/profile-image.webp 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b5014/profile-image.webp 240w","type":"image/webp","sizes":"(min-width: 120px) 120px, 100vw"}]},"width":120,"height":120}},"publicURL":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/profile-image.png"}},"pageContext":{"slug":"/development/react-next-master/","prev":null,"next":{"fields":{"slug":"/development/mvc-design-pattern/"},"frontmatter":{"title":"프론트엔드에서의 MVC 디자인패턴"}}}},"staticQueryHashes":[],"slicesMap":{}}