{"componentChunkName":"component---src-templates-post-template-tsx","path":"/development/inflearn-warmup-club-study-3/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%ED%8F%AC%EC%BC%93%EB%AA%AC-%EB%8F%84%EA%B0%90-%EC%95%B1\">포켓몬 도감 앱</a></p>\n<ul>\n<li><a href=\"#%EC%95%8C%EA%B2%8C%EB%90%9C-%EA%B2%83-string-array%EC%9D%98-includes-%EB%A9%94%EC%84%9C%EB%93%9C\">알게된 것 (String, Array의 includes 메서드)</a></li>\n<li><a href=\"#%EC%A0%95%EB%A6%AC%ED%95%98%EC%9E%90%EB%A9%B4\">정리하자면,</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></li>\n</ul>\n</li>\n</ul>","fields":{"readingTime":{"text":"5 min read"}},"html":"<blockquote>\n<p>과제를 수행하며 고민하고, 깨닫게 된 점들을 기록합니다.<br>\n같은 목표를 가진 분들과 함께 발전해 나가길 기대합니다. ☺️</p>\n</blockquote>\n<hr>\n<h2 id=\"포켓몬-도감-앱\" style=\"position:relative;\"><a href=\"https://github.com/helloleesul/inflearn-warmup-club-study/tree/main/pokedex-app\" target=\"_blank\" rel=\"nofollow\">포켓몬 도감 앱</a><a href=\"#%ED%8F%AC%EC%BC%93%EB%AA%AC-%EB%8F%84%EA%B0%90-%EC%95%B1\" aria-label=\"포켓몬 도감 앱 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><img src=\"https://i.imgur.com/61BJsAY.gif\" alt=\"\"></p>\n<hr>\n<h3 id=\"알게된-것-string-array의-includes-메서드\" style=\"position:relative;\">알게된 것 (String, Array의 includes 메서드)<a href=\"#%EC%95%8C%EA%B2%8C%EB%90%9C-%EA%B2%83-string-array%EC%9D%98-includes-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"알게된 것 string array의 includes 메서드 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>\n<p><strong>String</strong></p>\n<ul>\n<li>메인페이지에서 검색어를 입력할 때, 검색어가 포함된 객체들로 이루어진 배열을 따로 <code class=\"language-text\">searchResults</code> 라는 상태로 저장해주었다. 이 <code class=\"language-text\">searchResults</code> 상태를 연관검색어로 노출시키기 위함이었다.</li>\n<li><code class=\"language-text\">pokemonList</code> 배열에서 검색어(<code class=\"language-text\">searchInput</code>)가 포함된 name을 가진 객체만 모아서(배열을 필터링해) 반환해주는 filter, includes 메서드를 사용했다. 여기서 사용한 includes 메서드의 <code class=\"language-text\">pokemon.name</code> 는 <code class=\"language-text\">String</code> 타입이다.</li>\n<li>따라서 ‘h’ 라는 검색어를 입력했을때, 객체의 name 문자열 중에 ‘h’가 부분으로 포함된 객체들도 가져올 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Main Page</span>\n<span class=\"token comment\">// 포켓몬 이름(string)에 검색input이 포함된 것만 필터해서 반환</span>\n<span class=\"token keyword\">const</span> matched <span class=\"token operator\">=</span> pokemonList<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">pokemon</span> <span class=\"token operator\">=></span> pokemon<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>searchInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// true인 객체들만 반환</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 검색input값이 있을 때에만 검색 결과 배열에 저장</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>searchInput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setSearchResults</span><span class=\"token punctuation\">(</span>matched<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// String.prototype.includes</span>\n<span class=\"token keyword\">const</span> sentence <span class=\"token operator\">=</span> <span class=\"token string\">'The quick brown fox jumps over the lazy dog.'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'quick'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\bh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Quick'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false, 대소문자 구분</span></code></pre></div>\n</li>\n<li>\n<p><strong>Array</strong></p>\n<ul>\n<li>연관 검색어 배열에서 특정 검색어를 클릭 했을 때, 검색 input에는 선택된 특정 검색어를 value로 가지고, 연관 검색어 요소를 사라지게하는 기능을 구현하고자했다.</li>\n<li>선택된 특정 검색어가 <code class=\"language-text\">searchInput</code>가 되었을 때, 연관 검색어 배열에도 동일한 검색어를 가진다. (검색어 입력 시 필터링되게 했음으로)</li>\n<li>검색 input의 현재 value(<code class=\"language-text\">searchInput</code>)와 연관 검색어 목록이 정확히 동일하다면 연관 검색어를 보여주는 요소를 사라지게 하면 되었다. 연관 검색어 배열(<code class=\"language-text\">searchResults</code>)의 객체를 name 키만 가진 문자열 배열로 만들어 준 후(map 메서드), <code class=\"language-text\">Array</code>의 includes 메서드를 사용했다.</li>\n<li>따라서 ‘pikachu’ 라는 검색어를 클릭했을때, 배열의 요소 중에 정확히 ‘pikachu’가 있다면 true를 반환한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// SearchBar</span>\n<span class=\"token comment\">// 검색input 값이 검색 이름(array)에 포함된 경우 true일 때 (정확히 같아야 함)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>searchResults<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> result<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>searchInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setSearchShow</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 연관 검색 숨기기</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Array.prototype.includes</span>\n<span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mango'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ba'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n</li>\n</ul>\n<hr>\n<h3 id=\"정리하자면\" style=\"position:relative;\">정리하자면,<a href=\"#%EC%A0%95%EB%A6%AC%ED%95%98%EC%9E%90%EB%A9%B4\" aria-label=\"정리하자면 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>타입 차이<br>\n<code class=\"language-text\">Array.prototype.includes</code>는 배열의 요소를 찾기 위해 사용된다.<br>\n<code class=\"language-text\">String.prototype.includes</code>는 문자열 내의 부분 문자열을 찾기 위해 사용된다.</li>\n<li>비교 방식<br>\n배열에서는 엄격한 동등성(===) 비교를 사용한다.<br>\n문자열에서는 대소문자를 구분하는 포함 여부를 확인한다.</li>\n</ul>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\">마치며<a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>부분 문자열을 찾기(String) 위한 검색어 필터링과, 배열에서 딱 맞는 요소를 찾기(Array) 위한 기능 이렇게 2개로 각 includes가 데이터 타입에 따라 어떻게 작용되는지 비교해봤다.<br>\n데이터타입에 따라 다르게 적용하는 메서드들이 더 있을 거 같은데, 이번 과제를 하다가 해당 메서드를 딱 비교하기 좋을 것 같았다. 기능을 어떻게 구현할지에 대한 고민과 어떤 코드를 활용하면 좋을지, 내가 왜 이런 코드를 작성하게 되었는지 생각해 볼 수 있었고 재밌는 시간이었다.</p>","frontmatter":{"title":"String, Array의 includes 메서드는 비슷하지만 다르다.","summary":"인프런 워밍업 클럽 스터디 1기 FE - 과제","date":"2024-05-16","categories":["개발"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#c8d8e8","images":{"fallback":{"src":"/static/41c8054aa6d50f490ebb73b470fe33fc/fc463/string-array-includes.jpg","srcSet":"/static/41c8054aa6d50f490ebb73b470fe33fc/73b88/string-array-includes.jpg 746w,\n/static/41c8054aa6d50f490ebb73b470fe33fc/8bc80/string-array-includes.jpg 1491w,\n/static/41c8054aa6d50f490ebb73b470fe33fc/fc463/string-array-includes.jpg 2982w","sizes":"(min-width: 2982px) 2982px, 100vw"},"sources":[{"srcSet":"/static/41c8054aa6d50f490ebb73b470fe33fc/2a74d/string-array-includes.webp 746w,\n/static/41c8054aa6d50f490ebb73b470fe33fc/58a7b/string-array-includes.webp 1491w,\n/static/41c8054aa6d50f490ebb73b470fe33fc/c0ae3/string-array-includes.webp 2982w","type":"image/webp","sizes":"(min-width: 2982px) 2982px, 100vw"}]},"width":2982,"height":1677}},"publicURL":"/static/41c8054aa6d50f490ebb73b470fe33fc/string-array-includes.jpg"}}}}]},"file":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png","srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/6ecb6/profile-image.png 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/43a9d/profile-image.png 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/f5f72/profile-image.png 240w","sizes":"(min-width: 120px) 120px, 100vw"},"sources":[{"srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/2b147/profile-image.webp 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/caa3b/profile-image.webp 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b15f9/profile-image.webp 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b5014/profile-image.webp 240w","type":"image/webp","sizes":"(min-width: 120px) 120px, 100vw"}]},"width":120,"height":120}},"publicURL":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/profile-image.png"}},"pageContext":{"slug":"/development/inflearn-warmup-club-study-3/","prev":null,"next":{"fields":{"slug":"/development/inflearn-warmup-club-study-2/"},"frontmatter":{"title":"컴포넌트가 unmount될 때 애니메이션을 구현하고 싶었다."}}}},"staticQueryHashes":[],"slicesMap":{}}