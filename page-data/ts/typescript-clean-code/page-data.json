{"componentChunkName":"component---src-templates-post-template-tsx","path":"/ts/typescript-clean-code/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"tableOfContents":"<ul>\n<li>\n<p><a href=\"#clean-code\">Clean Code</a></p>\n<ul>\n<li>\n<p><a href=\"#%ED%81%B4%EB%A6%B0-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%8D%A8%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\">클린 코드를 써야 하는 이유</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%83%80%EC%9E%85%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\">타입이 필요한 이유</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EC%9E%91%EC%84%B1%ED%95%9C%EB%8B%A4%EB%A9%B4\">타입스크립트로 작성한다면?</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%81%B4%EB%A6%B0-%EC%BD%94%EB%93%9C%EC%99%80-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\">클린 코드와 타입스크립트</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\">참고자료</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"readingTime":{"text":"5 min read"}},"html":"<blockquote>\n<p>클린 코드에 대한 세부적인 내용 및 방법보다는 타입이 왜 필요한지 타입스크립트를 써야하는 이유와 이해를 위해 기록했습니다.</p>\n</blockquote>\n<h1 id=\"clean-code\" style=\"position:relative;\">Clean Code<a href=\"#clean-code\" aria-label=\"clean code permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p><em>“말 그대로 깨끗하게 작성된 코드”</em></p>\n<p>깨끗하게 작성된 코드는 직접적이고 단순하여 읽기가 쉽고, 누가봐도 의도가 명확히 드러나는 코드이다. 이러한 코드는 가독성이 좋고 의존성을 최대한 줄여 유지보수가 쉬운 특징이 있다.<br>\n👉 즉, <strong>원하는 로직을 빠르게 찾을 수 있는 코드, 모든 팀원이 이해하기 쉽도록 작성된 코드</strong></p>\n<hr>\n<h2 id=\"클린-코드를-써야-하는-이유\" style=\"position:relative;\">클린 코드를 써야 하는 이유<a href=\"#%ED%81%B4%EB%A6%B0-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%8D%A8%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"클린 코드를 써야 하는 이유 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>실무에서 클린코드의 의의는 유지보수 시간의 단축을 의미한다.<br>\n프로그래머는 작성 기한을 맞추기 위해서 나쁜 코드를 양산할 수밖에 없고 이 나쁜 코드로 결국엔 다시 또 개발 속도가 느려지고 기한을 놓치는 무한 지뢰에 빠지는 현상을 막기 위함이다.</p>\n<hr>\n<h2 id=\"타입이-필요한-이유\" style=\"position:relative;\">타입이 필요한 이유<a href=\"#%ED%83%80%EC%9E%85%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"타입이 필요한 이유 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"h\" 출력</span></code></pre></div>\n<p>위 코드의 경우 자바스크립트는 동적 타이핑을 지원하기 때문에 text 변수가 선언되는 과정에서 타입이 문자형으로 지정된다.</p>\n<p>이후 코드를 작성하는 과정에서 text 변수에 문자형이 아닌 다른 값을 할당했다고 가정해보면</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">text <span class=\"token operator\">=</span> <span class=\"token number\">12345</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TypeError: text.charAt is not a function</span></code></pre></div>\n<p>이처럼 자바스크립트는 타입이 없기 때문에 <strong>실행 후에 타입 에러를 확인</strong>할 수 있다.</p>\n<hr>\n<h2 id=\"타입스크립트로-작성한다면\" style=\"position:relative;\">타입스크립트로 작성한다면?<a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EC%9E%91%EC%84%B1%ED%95%9C%EB%8B%A4%EB%A9%B4\" aria-label=\"타입스크립트로 작성한다면 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">text <span class=\"token operator\">=</span> <span class=\"token number\">12345</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Type 'number' is not assignable to type 'string'.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>‘숫자’타입은 ‘문자형’ 타입에 할당할 수 없다는 <strong>에러를 미리 확인</strong>할 수 있다.</p>\n<p>👉 즉, 자바스크립트의 런타임 단계에서 발생하는 타입 에러는 타입스크립트를 이용한다면 <strong>컴파일 단계에서 미리 확인하고 고칠 수 있는 것</strong></p>\n<p>런타임 단계에서 발생하는 에러로 인해 프로그램이 멈춘다면, 운영되는 서비스에 큰 차질이 생길 수 있으며 따라서 타입스크립트를 이용한다면 타입 에러와 같은 개발자의 실수를 미리 방지할 수 있다.</p>\n<hr>\n<h2 id=\"클린-코드와-타입스크립트\" style=\"position:relative;\">클린 코드와 타입스크립트<a href=\"#%ED%81%B4%EB%A6%B0-%EC%BD%94%EB%93%9C%EC%99%80-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\" aria-label=\"클린 코드와 타입스크립트 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> String <span class=\"token operator\">=</span> <span class=\"token string\">'hello TypeScript'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위에서 확인한 바와 같이 타입을 정의함으로써 개발자의 실수를 줄일 수 있고, 명시된 타입을 보고 해당 변수의 자료형이 무엇인지 쉽게 이해할 수 있다.\n결과적으로 <strong>어떤 용도로 코드가 작성</strong>되어있고 <strong>무엇을 의미</strong>하는지 파악하기 훨씬 용이하기 때문에 <strong>유지보수에 유리</strong>하고 자연스럽게 <strong>개발 속도도 빨라지게</strong> 된다.</p>\n<hr>\n<h3 id=\"참고자료\" style=\"position:relative;\">참고자료<a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><a href=\"https://738.github.io/clean-code-typescript/\" target=\"_blank\" rel=\"nofollow\">clean-code-typescript 🚿 타입스크립트를 위한 클린코드 - 한글 번역판 🇰🇷\n</a><br>\n<a href=\"https://velog.io/@heelieben/%EC%8B%A4%EB%AC%B4%EC%97%90%EC%84%9C-%EB%B0%94%EB%A1%9C-%EC%93%B0%EB%8A%94-Frontend-Clean-Code-%EC%A0%95%EB%A6%AC\" target=\"_blank\" rel=\"nofollow\">실무에서 바로 쓰는 Frontend Clean Code 정리</a><br>\n<a href=\"https://youtu.be/edWbHp_k_9Y\" target=\"_blank\" rel=\"nofollow\">토스ㅣSLASH 21 - 실무에서 바로 쓰는 Frontend Clean Code</a><br>\n<a href=\"https://medium.com/@mvsg/12-typescript-tricks-for-clean-code-b23651dd0430\" target=\"_blank\" rel=\"nofollow\">12 TypeScript tricks for Clean Code</a></p>","frontmatter":{"title":"클린 코드로 이해하는 타입스크립트","summary":"타입스크립트를 써야하는 이유와 이해","date":"2023-06-14","categories":["TypeScript"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#3878c8","images":{"fallback":{"src":"/static/7920b76f414f4c65ccf126a43bc1025c/c9a0d/typescript-clean-code.webp","srcSet":"/static/7920b76f414f4c65ccf126a43bc1025c/43402/typescript-clean-code.webp 310w,\n/static/7920b76f414f4c65ccf126a43bc1025c/99352/typescript-clean-code.webp 620w,\n/static/7920b76f414f4c65ccf126a43bc1025c/c9a0d/typescript-clean-code.webp 1240w","sizes":"(min-width: 1240px) 1240px, 100vw"},"sources":[]},"width":1240,"height":698}},"publicURL":"/static/7920b76f414f4c65ccf126a43bc1025c/typescript-clean-code.webp"}}}}]},"file":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png","srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/6ecb6/profile-image.png 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/43a9d/profile-image.png 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/f5f72/profile-image.png 240w","sizes":"(min-width: 120px) 120px, 100vw"},"sources":[{"srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/2b147/profile-image.webp 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/caa3b/profile-image.webp 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b15f9/profile-image.webp 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b5014/profile-image.webp 240w","type":"image/webp","sizes":"(min-width: 120px) 120px, 100vw"}]},"width":120,"height":120}},"publicURL":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/profile-image.png"}},"pageContext":{"slug":"/ts/typescript-clean-code/","prev":{"fields":{"slug":"/trouble-shooting/navigator-clipobard/"},"frontmatter":{"title":"navigator.clipobard Web API"}},"next":{"fields":{"slug":"/retrospect/WIL-3/"},"frontmatter":{"title":"6월 셋째주 주간 회고"}}}},"staticQueryHashes":[],"slicesMap":{}}