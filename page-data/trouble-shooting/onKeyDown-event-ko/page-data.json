{"componentChunkName":"component---src-templates-post-template-tsx","path":"/trouble-shooting/onKeyDown-event-ko/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%ED%95%9C%EA%B8%80-%EC%9E%85%EB%A0%A5-%EC%8B%9C-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%A0%9C\">한글 입력 시 중복 문제</a></p>\n<ul>\n<li>\n<p><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%A0%95%EC%9D%98\">1. 문제 정의</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EC%82%AC%EC%8B%A4-%EC%88%98%EC%A7%91\">2. 사실 수집</a></p>\n</li>\n<li>\n<p><a href=\"#3-%EC%9B%90%EC%9D%B8-%EC%B6%94%EB%A1%A0\">3. 원인 추론</a></p>\n</li>\n<li>\n<p><a href=\"#4-%EC%A1%B0%EC%82%AC%EB%B0%A9%EB%B2%95-%EA%B2%B0%EC%A0%95\">4. 조사방법 결정</a></p>\n<ul>\n<li><a href=\"#%EB%B0%A9%EB%B2%95-1-iscomposing-\">방법 1) isComposing ✅</a></li>\n<li><a href=\"#%EB%B0%A9%EB%B2%95-2-onkeypress-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%82%AC%EC%9A%A9\">방법 2) onKeyPress 이벤트 사용</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-%EC%A1%B0%EC%82%AC-%EB%B0%A9%EB%B2%95-%EA%B5%AC%ED%98%84\">5. 조사 방법 구현</a></p>\n</li>\n<li>\n<p><a href=\"#6-%EA%B2%B0%EA%B3%BC-%EA%B4%80%EC%B0%B0\">6. 결과 관찰</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\">참고자료</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"readingTime":{"text":"8 min read"}},"html":"<h1 id=\"한글-입력-시-중복-문제\" style=\"position:relative;\">한글 입력 시 중복 문제<a href=\"#%ED%95%9C%EA%B8%80-%EC%9E%85%EB%A0%A5-%EC%8B%9C-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%A0%9C\" aria-label=\"한글 입력 시 중복 문제 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>3차 프로젝트 트래블스페이스 여행 블로그 사이트 작업 중 발생한 오류<br>\n블로그 생성 시 검색결과에 반영될 태그를 입력하는 부분이다.</p>\n<p><img src=\"https://i.imgur.com/QJM5ztr.gif\" alt=\"\"></p>\n<hr>\n<h2 id=\"1-문제-정의\" style=\"position:relative;\">1. 문제 정의<a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%A0%95%EC%9D%98\" aria-label=\"1 문제 정의 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>새로운 블로그를 생성하고 수정하는 페이지를 맡았다. input 에 해시태그를 입력하고 Enter키를 눌렀을 때 태그들이 아래에 하나씩 생성되는 기능을 구현하다가 발견한 오류이다.</p>\n<p>영어를 입력하면 문제없지만 한글을 입력했을 때에만 마지막 글자가 중복으로 입력되는 오류를 발견했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 태그</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Input</span></span>\n\t<span class=\"token attr-name\">...</span>\n\t<span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>tagInput<span class=\"token punctuation\">}</span></span>\n\t<span class=\"token attr-name\">onKeyDown</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleTags<span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">// 이벤트 실행 함수</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleTags</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HTMLInputElement</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">) </span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>tagInput<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> newTag <span class=\"token operator\">=</span> tagInput<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">\"Enter\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>planetInfo<span class=\"token punctuation\">.</span>hashtags <span class=\"token operator\">&amp;&amp;</span> planetInfo<span class=\"token punctuation\">.</span>hashtags<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setPlanetInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>planetInfo<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">hashtags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>planetInfo<span class=\"token punctuation\">.</span>hashtags<span class=\"token punctuation\">,</span> newTag<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"최대 5개만 작성 가능합니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">setTagInput</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"2-사실-수집\" style=\"position:relative;\">2. 사실 수집<a href=\"#2-%EC%82%AC%EC%8B%A4-%EC%88%98%EC%A7%91\" aria-label=\"2 사실 수집 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>사용한 <code class=\"language-text\">onKeyDown</code> 이벤트를 MDN 공식문서를 통해 찾아보았고, 아래와 같은 안내 문구를 발견했다.</p>\n<p><em><strong>한중일 사용자의 브라우저 간 호환성을 개선하기 위해 IME 컴포지션 중에 키다운 및 키업 이벤트가 발생하도록 변경되었습니다. 컴포지션의 일부인 모든 키다운 이벤트를 무시하려면 다음과 같이 하세요.</strong></em></p>\n<blockquote>\n<p>Since Firefox 65, the <code class=\"language-text\">keydown</code> and <code class=\"language-text\">keyup</code> events are now fired during IME composition, to improve cross-browser compatibility for CJKT users (<a href=\"https://bugzil.la/354358\" target=\"_blank\" rel=\"nofollow\">Firefox bug 354358</a>). To ignore all <code class=\"language-text\">keydown</code> events that are part of composition, do something like this (229 is a special value set for a <code class=\"language-text\">keyCode</code> relating to an event that has been processed by an IME):</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">eventTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keydown'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>isComposing <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">===</span> <span class=\"token number\">229</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// do something</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">keyDown</code>, <code class=\"language-text\">keyUp</code> 이벤트에 한글 뿐만 아니라, 일본어, 중국어 등에서 발생하는 문제이며 이를 무시하는 방법을 제시하고 있다.</p>\n<hr>\n<h2 id=\"3-원인-추론\" style=\"position:relative;\">3. 원인 추론<a href=\"#3-%EC%9B%90%EC%9D%B8-%EC%B6%94%EB%A1%A0\" aria-label=\"3 원인 추론 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>문제의 원인이라고 추론되는 <a href=\"https://ko.wikipedia.org/wiki/%EC%9E%85%EB%A0%A5%EA%B8%B0\" target=\"_blank\" rel=\"nofollow\"><strong>IME composition</strong></a>에 대해서 알아보기로 했다.</p>\n<blockquote>\n<h3 id=\"ime-composition\" style=\"position:relative;\">IME composition<a href=\"#ime-composition\" aria-label=\"ime composition permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>입력기 또는 입력 방식 편집기(input method editor, IME)는 한글, 한자처럼 컴퓨터 자판에 있는 글자보다 수가 더 많은 문자를 계산하거나 조합하여 입력해 주는 시스템 소프트웨어이다.</p>\n</blockquote>\n<p>IME는 영어가 아닌 한글, 일본어, 중국어와 같은 언어를 다양한 브라우저에서 지원하도록 언어를 변환시켜주기 위한 OS 단계의 어플리케이션을 말한다.</p>\n<p>그러나 IME 과정에서 keydown 이벤트가 발생하면, OS와 브라우저에서 해당 이벤트를 모두 처리하기 때문에 keydown 이벤트가 중복으로 발생하게 되는 것이다.</p>\n<p>즉, IME를 통해 한글, 일본어, 중국어 등을 변환하는 과정(composition)에서 keydown 이벤트는 OS 뿐만 아니라 브라우저에서도 처리되기 때문에 중복 발생된다.</p>\n<hr>\n<h2 id=\"4-조사방법-결정\" style=\"position:relative;\">4. 조사방법 결정<a href=\"#4-%EC%A1%B0%EC%82%AC%EB%B0%A9%EB%B2%95-%EA%B2%B0%EC%A0%95\" aria-label=\"4 조사방법 결정 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"방법-1-iscomposing-\" style=\"position:relative;\">방법 1) isComposing ✅<a href=\"#%EB%B0%A9%EB%B2%95-1-iscomposing-\" aria-label=\"방법 1 iscomposing  permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><img src=\"https://i.imgur.com/JClvyka.gif\" alt=\"\"></p>\n<p><code class=\"language-text\">isComposing</code> 의 boolean값이 어떨 때 변화하는지 콘솔에 찍어봤다. 키보드로 한글 키를 누르면 조합 중일 때에는 false, 조합이 완료된 때에는 true를 반환해준다. (‘ㅎ’ <code class=\"language-text\">keyDown</code> 이벤트, ‘ㅏ’ <code class=\"language-text\">keyDown</code> 이벤트, ‘ㄴ’ <code class=\"language-text\">keyDown</code> 이벤트 등이 순차적으로 발생)</p>\n<p>즉, 한글을 입력할 때, IME가 활성화되고 사용자가 글자를 조합하는 동안 <code class=\"language-text\">keyDown</code> 이벤트가 반복해서 발생할 수 있다.</p>\n<p>다시 문서에서 제안하는 해결방안 코드를 살펴보자면 <code class=\"language-text\">isComposing</code>이 true인 순간은 아직 IME에 의한composition 단계이므로, 이 단계에서 이벤트가 발생하지 않도록 하는 방법을 사용할 수 있다.</p>\n<h3 id=\"방법-2-onkeypress-이벤트-사용\" style=\"position:relative;\">방법 2) onKeyPress 이벤트 사용<a href=\"#%EB%B0%A9%EB%B2%95-2-onkeypress-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%82%AC%EC%9A%A9\" aria-label=\"방법 2 onkeypress 이벤트 사용 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><code class=\"language-text\">keyDown, keyUp</code> 이벤트는 특정 키의 누름과 뗌을 감지하고, <code class=\"language-text\">keyPress</code> 는 텍스트 입력을 감지한다.</p>\n<blockquote>\n<p>“a” 문자를 입력했을 때, keyDown, keyUp 이벤트에서는 <strong>키 코드</strong>로 65 (대문자 ‘A’와 동일)가 반환되고, keyPress 이벤트에서는 <strong>문자 코드</strong>로 97 (소문자 ‘a’)가 반환됩니다.</p>\n</blockquote>\n<p>브라우저가 조합 문자 입력을 <code class=\"language-text\">keyDown</code> 이벤트 단계에서 처리하고, <code class=\"language-text\">keyPress</code> 이벤트는 실제 완성된 문자를 나타내기 때문에 중복 실행되는 오류가 발생하지 않는다.</p>\n<p><img src=\"https://i.imgur.com/9bCRjkC.png\" alt=\"\"></p>\n<p>하지만 <code class=\"language-text\">onKeyPress</code> 이벤트는 공식문서에서 더 이상 지원하지 않는 이벤트이므로 첫번째 방법을 시도해보기로 했다.</p>\n<hr>\n<h2 id=\"5-조사-방법-구현\" style=\"position:relative;\">5. 조사 방법 구현<a href=\"#5-%EC%A1%B0%EC%82%AC-%EB%B0%A9%EB%B2%95-%EA%B5%AC%ED%98%84\" aria-label=\"5 조사 방법 구현 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><code class=\"language-text\">isComposing</code> 속성이 없다는 타입 오류가 나타났다.\n<img src=\"https://i.imgur.com/GvxeMbP.png\" alt=\"\"></p>\n<p>서치해본 결과 타입스크립트에서 지원하는 타입속성이 있어서 해결하였다.\n<img src=\"https://i.imgur.com/nt3bOC8.png\" alt=\"\">\n<img src=\"https://i.imgur.com/bkv0jbM.png\" alt=\"\"></p>\n<p>찾아보면서 알게 되었는데, 타입스크립트를 사용하지 않는 리액트에서는 따로 composition 이벤트 핸들러를 사용해야 한다고 한다.\n<img src=\"https://i.imgur.com/a9usAb2.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"6-결과-관찰\" style=\"position:relative;\">6. 결과 관찰<a href=\"#6-%EA%B2%B0%EA%B3%BC-%EA%B4%80%EC%B0%B0\" aria-label=\"6 결과 관찰 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>중복 실행되는 오류없이 아주 잘 작동되는 걸 확인할 수 있다.\n<img src=\"https://i.imgur.com/CARcz5F.gif\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleTags</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HTMLInputElement</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">) </span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nativeEvent<span class=\"token punctuation\">.</span>isComposing<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>tagInput<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> newTag <span class=\"token operator\">=</span> tagInput<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">\"Enter\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>planetInfo<span class=\"token punctuation\">.</span>hashtags <span class=\"token operator\">&amp;&amp;</span> planetInfo<span class=\"token punctuation\">.</span>hashtags<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setPlanetInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token operator\">...</span>planetInfo<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">hashtags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>planetInfo<span class=\"token punctuation\">.</span>hashtags<span class=\"token punctuation\">,</span> newTag<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"최대 5개만 작성 가능합니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">setTagInput</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h3 id=\"참고자료\" style=\"position:relative;\">참고자료<a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event\" target=\"_blank\" rel=\"nofollow\">Element: keydown event - Web APIs | MDN</a><br>\n<a href=\"https://react.dev/reference/react-dom/components/common#compositionevent-handler\" target=\"_blank\" rel=\"nofollow\">Common components (e.g. div) – React</a><br>\n<a href=\"https://velog.io/@dosomething/React-%ED%95%9C%EA%B8%80-%EC%9E%85%EB%A0%A5%EC%8B%9C-keydown-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A4%91%EB%B3%B5-%EB%B0%9C%EC%83%9D-%ED%98%84%EC%83%81\" target=\"_blank\" rel=\"nofollow\">React, 한글 입력시 keydown 이벤트 중복 발생 현상</a><br>\n<a href=\"https://velog.io/@euji42/solved-%ED%95%9C%EA%B8%80-%EC%9E%85%EB%A0%A5%EC%8B%9C-2%EB%B2%88-%EC%9E%85%EB%A0%A5%EC%9D%B4-%EB%90%98%EB%8A%94-%EA%B2%BD%EC%9A%B0#%EC%9B%90%EC%9D%B8--imeinput-method-editor-%EB%AC%B8%EC%A0%9C\" target=\"_blank\" rel=\"nofollow\">MMZ 일지 19. 한글 입력할 때 2번 입력이 되는 경우 in React, Typescript</a></p>","frontmatter":{"title":"onKeyDown Event","summary":"3차 프로젝트 여행 블로그 사이트 작업 중 발생한 입력 중복 오류","date":"2023-10-26","categories":["트러블슈팅"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8e8","images":{"fallback":{"src":"/static/b6d490703869cf397c5d1e8b53191643/9ce37/onKeyDown-event-ko.png","srcSet":"/static/b6d490703869cf397c5d1e8b53191643/e1116/onKeyDown-event-ko.png 384w,\n/static/b6d490703869cf397c5d1e8b53191643/9b7d7/onKeyDown-event-ko.png 768w,\n/static/b6d490703869cf397c5d1e8b53191643/9ce37/onKeyDown-event-ko.png 1536w","sizes":"(min-width: 1536px) 1536px, 100vw"},"sources":[{"srcSet":"/static/b6d490703869cf397c5d1e8b53191643/5358b/onKeyDown-event-ko.webp 384w,\n/static/b6d490703869cf397c5d1e8b53191643/81e8e/onKeyDown-event-ko.webp 768w,\n/static/b6d490703869cf397c5d1e8b53191643/fe26e/onKeyDown-event-ko.webp 1536w","type":"image/webp","sizes":"(min-width: 1536px) 1536px, 100vw"}]},"width":1536,"height":804}},"publicURL":"/static/b6d490703869cf397c5d1e8b53191643/onKeyDown-event-ko.png"}}}}]},"file":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png","srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/6ecb6/profile-image.png 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/43a9d/profile-image.png 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/f5f72/profile-image.png 240w","sizes":"(min-width: 120px) 120px, 100vw"},"sources":[{"srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/2b147/profile-image.webp 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/caa3b/profile-image.webp 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b15f9/profile-image.webp 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b5014/profile-image.webp 240w","type":"image/webp","sizes":"(min-width: 120px) 120px, 100vw"}]},"width":120,"height":120}},"publicURL":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/profile-image.png"}},"pageContext":{"slug":"/trouble-shooting/onKeyDown-event-ko/","prev":{"fields":{"slug":"/development/development-roadmap-for-beginner-developers/"},"frontmatter":{"title":"신입 개발자를 위한 개발 로드맵"}},"next":{"fields":{"slug":"/ui-ux/log-in-or-sign-in/"},"frontmatter":{"title":"Log in과 Sign in의 차이는 뭘까?"}}}},"staticQueryHashes":[],"slicesMap":{}}