{"componentChunkName":"component---src-templates-post-template-tsx","path":"/trouble-shooting/navigator-clipobard/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EB%B3%B5%EC%82%AC%ED%95%98%EA%B8%B0-%EA%B8%B0%EB%8A%A5-%EC%98%A4%EB%A5%98\">복사하기 기능 오류</a></p>\n<ul>\n<li>\n<p><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%A0%95%EC%9D%98\">1. 문제 정의</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EC%82%AC%EC%8B%A4-%EC%88%98%EC%A7%91\">2. 사실 수집</a></p>\n</li>\n<li>\n<p><a href=\"#3-%EC%9B%90%EC%9D%B8-%EC%B6%94%EB%A1%A0\">3. 원인 추론</a></p>\n</li>\n<li>\n<p><a href=\"#4-%EC%A1%B0%EC%82%AC%EB%B0%A9%EB%B2%95-%EA%B2%B0%EC%A0%95\">4. 조사방법 결정</a></p>\n</li>\n<li>\n<p><a href=\"#5-%EC%A1%B0%EC%82%AC-%EB%B0%A9%EB%B2%95-%EA%B5%AC%ED%98%84\">5. 조사 방법 구현</a></p>\n</li>\n<li>\n<p><a href=\"#6-%EA%B2%B0%EA%B3%BC-%EA%B4%80%EC%B0%B0\">6. 결과 관찰</a></p>\n<ul>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></li>\n<li><a href=\"#%EC%B6%94%EA%B0%80-%EB%82%B4%EC%9A%A9\">추가 내용</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"readingTime":{"text":"8 min read"}},"html":"<h1 id=\"복사하기-기능-오류\" style=\"position:relative;\">복사하기 기능 오류<a href=\"#%EB%B3%B5%EC%82%AC%ED%95%98%EA%B8%B0-%EA%B8%B0%EB%8A%A5-%EC%98%A4%EB%A5%98\" aria-label=\"복사하기 기능 오류 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>엘리스 1차 프로젝트 팔이피플 쇼핑몰 사이트 작업 중 발생한 오류</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> orderId <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>urlStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'orderId'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nguestModeEl<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">주문번호 &lt;button type=\"button\" id=\"order-id\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>orderId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/button>와 비밀번호를 기억해주세요!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> orderIdCopy <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#order-id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\norderIdCopy<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">writeText</span><span class=\"token punctuation\">(</span>orderId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">주문번호: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>orderId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'복사실패'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h2 id=\"1-문제-정의\" style=\"position:relative;\">1. 문제 정의<a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%A0%95%EC%9D%98\" aria-label=\"1 문제 정의 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>배포 후, 결제완료 페이지에서 구현한 주문번호 복사하기 기능이 되지않는 문제를 발견했다.</p>\n<hr>\n<h2 id=\"2-사실-수집\" style=\"position:relative;\">2. 사실 수집<a href=\"#2-%EC%82%AC%EC%8B%A4-%EC%88%98%EC%A7%91\" aria-label=\"2 사실 수집 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>콘솔에 <code class=\"language-text\">navigator.clipboard is undefined</code> 라는 에러를 확인했고, 로컬서버 환경에서는 정상작동이 되는 것을 확인했기 때문에 배포서버 환경에서 나타나는 문제로 인식하였다.</p>\n<hr>\n<h2 id=\"3-원인-추론\" style=\"position:relative;\">3. 원인 추론<a href=\"#3-%EC%9B%90%EC%9D%B8-%EC%B6%94%EB%A1%A0\" aria-label=\"3 원인 추론 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>사용한 코드는 Web API인 <code class=\"language-text\">Clipboard API</code>이고, mdn 공식문서에서 확인해본 결과 해당 API는 보안 컨텍스트(HTTPS)나 localhost 에서만 사용할 수 있는 것으로 확인되었다.</p>\n<p>때문에 localhost 주소였던 로컬서버에서는 문제없이 작동되었지만 배포서버는 HTTP 환경이어서 작동이 되지 않았던 것이다.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard\" target=\"_blank\" rel=\"nofollow\">🔗 참고자료 | Clipboard - Web APIs | MDN</a></p>\n<hr>\n<h2 id=\"4-조사방법-결정\" style=\"position:relative;\">4. 조사방법 결정<a href=\"#4-%EC%A1%B0%EC%82%AC%EB%B0%A9%EB%B2%95-%EA%B2%B0%EC%A0%95\" aria-label=\"4 조사방법 결정 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>배포서버는 HTTP 프로토콜이기 때문에 HTTPS 프로토콜 환경으로 다시 배포하여 기능이 정상 작동할 수 있도록 Clipboard API를 사용하거나, 다른방법을 찾아 복사하기 기능을 구현해야했다.</p>\n<ol>\n<li>\n<p><strong>사용자가 직접 브라우저 설정하기</strong><br>\n조사해보니 HTTP에서 해결할 수 있는 방법도 있었는데, 사용자가 직접 브라우저에서 방문할 사이트의 주소 안전한것으로 취급하는 설정 허용시켜줘야하는 것이었다.<br>\n하지만 보안이슈와 사용자가 직접 허용을 해줘야하는 불필요함이 발생해 안좋은 방법이라고 판단되었다.</p>\n<p><em>크롬 브라우저 설정 → 개인 정보 보호 및 보안 → 사이트 설정 → 추가 콘텐츠 설정 → 안전하지 않은 콘텐츠</em></p>\n</li>\n<li>\n<p><strong>✅ Document: execCommand() 메서드 사용하기</strong><br>\ndocument가 디자인 모드, 즉 편집 가능한 상태가 되면 <code class=\"language-text\">exeCommand()</code>매서드를 사용할 수 있는데 execCommand를 호출 후 copy 명령어를 사용한다.<br>\n로직은 input같은 form 엘리먼트에서만 사용 가능한 <code class=\"language-text\">select()</code>메서드를 통해 선택 영역을 지정해준다.\n<code class=\"language-text\">select()</code>로 선택한 영역을 범위로 execCommand의 copy 메서드가 작동하며 클립보드에 정상적으로 저장이 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">onCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> uuid<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// uuid => ref로 받아온 input의 current</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    content<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Document/execCommand\" target=\"_blank\" rel=\"nofollow\">🔗 참고자료 | Document.execCommand() - Web API | MDN</a></p>\n</li>\n</ol>\n<hr>\n<h2 id=\"5-조사-방법-구현\" style=\"position:relative;\">5. 조사 방법 구현<a href=\"#5-%EC%A1%B0%EC%82%AC-%EB%B0%A9%EB%B2%95-%EA%B5%AC%ED%98%84\" aria-label=\"5 조사 방법 구현 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> orderId <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>urlStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'orderId'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nguestModeEl<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">주문번호 &lt;label for=\"order-id\" id=\"order-id-label\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>orderId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/label>\n&lt;input id=\"order-id\" />와 비밀번호를 기억해주세요!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> orderIdInput <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#order-id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> orderIdCopy <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#order-id-label'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\norderIdCopy<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  orderIdInput<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> orderId<span class=\"token punctuation\">;</span>\n  orderIdInput<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'주문번호가 복사되었습니다!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">Document: execCommand()</code> 메서드를 사용하려면 input이나 textarea 같은 form 엘리먼트에서 사용 가능한 입력태그를 이용해야해서 기존의 button 태그에서 input 태그로 변경하였다.</p>\n<hr>\n<h2 id=\"6-결과-관찰\" style=\"position:relative;\">6. 결과 관찰<a href=\"#6-%EA%B2%B0%EA%B3%BC-%EA%B4%80%EC%B0%B0\" aria-label=\"6 결과 관찰 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>기능은 잘 구현되지만 input 태그가 select 되었을 때 화면상 입력태그가 선택된 모양이 너무 이상했다. 사용자가 클릭을 하고싶은 모양인 버튼 디자인처럼 보이길 원했다.</p>\n<p>그래서 클릭되는 요소를 label 태그로 바꾸고 input 태그와 연결시켜주었다. 그리고 input 태그를 보이지않게 하기위해 input 태그에 <code class=\"language-text\">disable</code> 태그 속성, <code class=\"language-text\">display: none</code>또는 <code class=\"language-text\">visibillity: hidden</code> 으로 스타일을 적용하였더니 이번에는 기능이 구현되지않았다.</p>\n<p>input 태그를 숨기거나 비활성화되게 만들면 <code class=\"language-text\">Document: execCommand() 메서드</code>가 적용되지 않는 듯 했다. 고민 끝에 <code class=\"language-text\">position: absolute</code>로 요소를 겹치게해주고 <code class=\"language-text\">opacity: 0</code>으로 input 태그를 임의로 숨겨서 기능도 작동하고 UI 상에서도 label 태그를 button 태그처럼 보이도록 원하는대로 변경하였다.</p>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\">마치며<a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><code class=\"language-text\">Document: execCommand()</code> 메서드는 현재 대부분 브라우저에서 지원하긴 하지만 웹 표준에서는 삭제된 기능이므로 clipboard.js 와 같은 라이브러리를 사용하는것도 좋은 방법일듯 하다.</p>\n<p>아니면 <code class=\"language-text\">window.isSecureContext</code> 속성을 사용해 HTTPS 프로토콜 환경인지 조건문으로 확인하여 <code class=\"language-text\">Document: execCommand()</code>와 <code class=\"language-text\">Clipboard API</code>를 적절히 사용하는 방법도 좋을 것 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>isSecureContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Clipboard API 사용</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Document: execCommand() 메서드 사용</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://bobbyhadz.com/blog/navigator-clipboard-is-undefined-in-javascript\" target=\"_blank\" rel=\"nofollow\">🔗 참고자료 | navigator.clipboard is undefined in JavaScript issue [Fixed] | bobbyhadz</a></p>\n<hr>\n<h3 id=\"추가-내용\" style=\"position:relative;\">추가 내용<a href=\"#%EC%B6%94%EA%B0%80-%EB%82%B4%EC%9A%A9\" aria-label=\"추가 내용 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill=\"#a0aec0\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<blockquote>\n<p><strong>HTTP와 HTTPS</strong></p>\n<ul>\n<li>HTTP는 웹에서 서버와 클라이언트가 어떻게 메세지를 서로 주고받을지 정해놓은 규칙이자 HTML문서같은 정보들을 빠르게 교환하기 위한 프로토콜이다. 브라우저가 웹 서버에 HTTP요청을 하고 웹 서버에서 HTTP응답을 하는것이고 우리가 사이트에 방문할 때 요청을 하고 응답으로 사이트를 보여주는 것이다.</li>\n<li>HTTPS는 HTTP에 데이터 암호화가 추가된 프로토콜이다. 브라우저랑 서버가 데이터를 전송하기 전에 암호화된 연결을 설정한 것이며 암호화된 데이터를 전송한다.</li>\n</ul>\n</blockquote>","frontmatter":{"title":"navigator.clipobard Web API","summary":"엘리스 1차 쇼핑몰 프로젝트 작업 중 발생한 복사하기 기능 오류","date":"2023-10-05","categories":["트러블슈팅"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#98a8a8","images":{"fallback":{"src":"/static/b87798af97a72404a447362590d3a2bc/9ce37/navigator-clipobard.png","srcSet":"/static/b87798af97a72404a447362590d3a2bc/e1116/navigator-clipobard.png 384w,\n/static/b87798af97a72404a447362590d3a2bc/9b7d7/navigator-clipobard.png 768w,\n/static/b87798af97a72404a447362590d3a2bc/9ce37/navigator-clipobard.png 1536w","sizes":"(min-width: 1536px) 1536px, 100vw"},"sources":[{"srcSet":"/static/b87798af97a72404a447362590d3a2bc/5358b/navigator-clipobard.webp 384w,\n/static/b87798af97a72404a447362590d3a2bc/81e8e/navigator-clipobard.webp 768w,\n/static/b87798af97a72404a447362590d3a2bc/fe26e/navigator-clipobard.webp 1536w","type":"image/webp","sizes":"(min-width: 1536px) 1536px, 100vw"}]},"width":1536,"height":804}},"publicURL":"/static/b87798af97a72404a447362590d3a2bc/navigator-clipobard.png"}}}}]},"file":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png","srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/6ecb6/profile-image.png 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/43a9d/profile-image.png 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/a0287/profile-image.png 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/f5f72/profile-image.png 240w","sizes":"(min-width: 120px) 120px, 100vw"},"sources":[{"srcSet":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/2b147/profile-image.webp 30w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/caa3b/profile-image.webp 60w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b15f9/profile-image.webp 120w,\n/static/a9e176c8b5d5241ac6440aa4781a5cc7/b5014/profile-image.webp 240w","type":"image/webp","sizes":"(min-width: 120px) 120px, 100vw"}]},"width":120,"height":120}},"publicURL":"/static/a9e176c8b5d5241ac6440aa4781a5cc7/profile-image.png"}},"pageContext":{"slug":"/trouble-shooting/navigator-clipobard/","prev":{"fields":{"slug":"/ui-ux/log-in-or-sign-in/"},"frontmatter":{"title":"Log in과 Sign in의 차이는 뭘까?"}},"next":{"fields":{"slug":"/ts/typescript-clean-code/"},"frontmatter":{"title":"클린 코드로 이해하는 타입스크립트"}}}},"staticQueryHashes":[],"slicesMap":{}}